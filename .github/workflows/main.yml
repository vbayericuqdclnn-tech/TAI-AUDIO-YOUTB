name: "YouTube Audio to Drive (fixed)"

on:
  workflow_dispatch: {}
  

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      contents: read

    env:
      # ==== TUỲ CHỈNH NHANH ====
      SLEEP_SECONDS: "8"
      MAX_PER_RUN: "40"

      # ==== GOOGLE DRIVE ====
      # Dùng 1 trong 2 (ưu tiên OAuth nếu cả hai có):
      GDRIVE_OAUTH_TOKEN_JSON: ${{ secrets.GDRIVE_OAUTH_TOKEN_JSON }}
      GDRIVE_SA_JSON: ${{ secrets.GDRIVE_SA_JSON }}
      GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}

      # ==== YouTube extractor (tuỳ chọn) ====
      PO_TOKEN: ${{ secrets.PO_TOKEN }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: "Install system deps (ffmpeg)"
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      # Cài yt-dlp mới nhất từ GitHub (né nsig/SABR)
      - name: "Install latest yt-dlp from master"
        run: |
          python -m pip install --upgrade "yt-dlp @ https://github.com/yt-dlp/yt-dlp/archive/refs/heads/master.zip"
          yt-dlp --version

      - name: "Install Python deps"
        run: |
          python -m pip install --upgrade google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib

      # (OPTIONAL) ghi cookies_multi.txt nếu có secret
      - name: "Write cookies_multi.txt (optional)"
        env:
          _COOKIES: ${{ secrets.YT_COOKIES_MULTI }}
        run: |
          set -e
          mkdir -p data
          if [ -n "${_COOKIES}" ]; then
            printf '%s' "${_COOKIES}" > data/cookies_multi.txt
            echo "cookies_multi.txt created."
          else
            echo "YT_COOKIES_MULTI not set; skipping."
          fi
          
      # ==== Dọn ngay sau khi chạy để không giữ file nặng ====
      - name: Cleanup temp audio
        if: always()
        run: |
          rm -rf "$RUNNER_TEMP/audio" || true
          # Xoá symlink để tránh lẫn giữa các run
          rm -f data/audio || true
          mkdir -p "$RUNNER_TEMP/audio" && ln -s "$RUNNER_TEMP/audio" data/audio

      - name: Commit updated dalay.txt (if changed)
        if: always()
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          if git diff --quiet --exit-code -- data/dalay.txt; then
            echo "No changes in dalay.txt"
          else
            git add data/dalay.txt
            git commit -m "chore: update dalay.txt (YouTube audio processed)" || exit 0
            git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
            git pull --rebase origin "${{ github.ref_name }}" || true
            git push origin "HEAD:${{ github.ref_name }}"
          fi


      - name: Disk space (after)
        if: always()
        run: df -h
    
      # (OPTIONAL) ghi po_token.txt nếu muốn để ở file
      - name: "Write po_token.txt (optional)"
        env:
          _POFILE: ${{ secrets.PO_TOKEN_FILE }}
        run: |
          set -e
          mkdir -p data
          if [ -n "${_POFILE}" ]; then
            printf '%s' "${_POFILE}" > data/po_token.txt
            echo "po_token.txt created."
          else
            echo "PO_TOKEN_FILE not set; skipping."
          fi

      # >>> CHỈ SỬA STEP NÀY: ép dùng ROOT/data cho scripts/yt_audio_to_drive.py
      - name: "Run - YouTube audio to Drive (scripts/, ROOT/data)"
        shell: bash
        run: |
          set -euo pipefail

          # Kiểm tra script
          if [ ! -f "scripts/yt_audio_to_drive.py" ]; then
            echo "::error::Không tìm thấy scripts/yt_audio_to_drive.py"
            ls -la scripts || true
            exit 2
          fi

          # Đảm bảo ROOT/data tồn tại (bạn đã xác nhận dùng ROOT/data)
          mkdir -p data

          # Bắt buộc dùng ROOT/data: làm symlink cứng scripts/data -> ROOT/data
          rm -rf scripts/data
          ln -s "$(pwd)/data" scripts/data

          echo "[INFO] scripts/data -> $(readlink -f scripts/data)"
          ls -la scripts | sed -n '1,200p'
          ls -la data || true

          python -u scripts/yt_audio_to_drive.py
